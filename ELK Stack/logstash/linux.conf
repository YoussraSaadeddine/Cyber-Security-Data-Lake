input {
  beats {
    port => 5044
   }
}
#AccessLOG
filter {
 if [fields][log_type] == "access" {
     mutate {add_tag => [ "access_log" ]}
    grok {
		    match => {
			"message" => "%{COMBINEDAPACHELOG}"
			}
		}
		
		date {
		    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
		geoip {
		    source => "clientip"
		}
		mutate {
		    convert => { "bytes" => "integer" }
		}
    }
               
#ErrorLog
 if [fields][log_type] == "error" {
    mutate {add_tag => [ "error_log" ]}
    grok {
      patterns_dir => ["C:/elastic stack/logstash-7.11.1/patterns.d/error/"]
      match => [ "message", "%{APACHE_ERROR_LOG}" ]
    }

    geoip {
        source => "clientip"
      }
  
	date {
		    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
	}
	
	
	
#Maillogs	
	
 if [fields][log_type] == "maillog" {
        mutate {add_tag => [ "maillog_log" ]}
 	grok {
      patterns_dir => ["C:/elastic stack/logstash-7.11.1/patterns.d/sendmail/"]
      match => [ "message", "%{SYSLOGBASE}%{SENDMAIL}" ]
    }
	date {
		    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}

  }
  
#SecureLogs 
 if [fields][log_type] == "secure" {
     mutate {add_tag => [ "secure_log" ]}
    grok {
	    match => { "message" => "%{SYSLOGBASE} %{GREEDYDATA:message}" }
	    overwrite => [ "message" ]
	        }
	date {

	    match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss"  ]
	     }
    if [program] == "sshd" {

	grok {
        match => { "message" => "Illegal user %{USER:username} from %{IP:src_ip}" }
        add_field => [ "illegal_user", "true" ]
         }
    grok {
        match => { "message" => "Failed password for %{GREEDYDATA:username} from %{IP:src_ip} port %{INT:src_port} ssh2" }
        add_field => [ "failed_password", "true" ]

         }
    grok {
        match => { "message" => "Accepted %{WORD:method} for %{USER:username} from %{IP:src_ip} port %{INT:src_port} ssh2" }
        add_field => [ "auth_success", "true" ]

         }
		 }
	if [program] == "xinetd" {
	
	grok {
          match => { "message" => "START: %{WORD:method} pid=%{NUMBER:pid} from=%{IP:src_ip}" }

         }}
	date {
		    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
  }
   
 if [fields][log_type] == "messages" {
    mutate {add_tag => [ "messages_log" ]}
    grok {
		    match => {"message" => "%{SYSLOGBASE} %{GREEDYDATA:message}"}
		}
		
		date {
		    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
 
  }

 }
  

output {
elasticsearch {

hosts => ["localhost:9200"]
index => "Linuxlog"
              }
stdout {}
}